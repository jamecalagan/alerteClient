import React, { useEffect, useState } from "react";
import { ScrollView, Text, View, Alert, TouchableOpacity } from "react-native";
import { useRoute, useNavigation } from "@react-navigation/native";
import * as Print from "expo-print";
import { supabase } from "../supabaseClient";
import * as Sharing from "expo-sharing";

const QuotePrintPage = () => {
	const navigation = useNavigation();
    const route = useRoute();
    const { id } = route.params;
    const [quote, setQuote] = useState(null);

    useEffect(() => {
        fetchQuote();
    }, []);

    const fetchQuote = async () => {
        const { data, error } = await supabase
            .from("quotes")
            .select("*")
            .eq("id", id)
            .single();

        if (error) {
            Alert.alert("Erreur", "Impossible de charger le devis");
            console.error(error);
        } else {
            setQuote(data);
        }
    };

    const handlePrint = async () => {
        if (!quote) return;

        const dateCreated = new Date(quote.created_at).toLocaleDateString(
            "fr-FR",
            {
                day: "numeric",
                month: "long",
                year: "numeric",
            }
        );

        const dateValid = new Date(quote.valid_until).toLocaleDateString(
            "fr-FR",
            {
                day: "numeric",
                month: "long",
                year: "numeric",
            }
        );

        const rowsHtml = quote.items
            .map((item) => {
                const qty = parseFloat(item.quantity) || 0;
                const puTTC = parseFloat(item.unitPrice) || 0;
                const puHT = puTTC / 1.2;
                const totalTTC = qty * puTTC;
                const tva = totalTTC - puHT * qty;

                const designation = item.label
                    ? `${item.label} ‚Äî ${item.description}`
                    : item.description;

                return `
			  <tr>
				<td style="border: 1px solid #ccc; padding: 4px;">${designation}</td>
				<td style="border: 1px solid #ccc; padding: 4px;">${qty}</td>
				<td style="border: 1px solid #ccc; padding: 4px;">${puHT.toFixed(2)} ‚Ç¨</td>
				<td style="border: 1px solid #ccc; padding: 4px;">${tva.toFixed(2)} ‚Ç¨</td>
				<td style="border: 1px solid #ccc; padding: 4px;">${totalTTC.toFixed(2)} ‚Ç¨</td>
			  </tr>
			`;
            })
            .join("");

        const totalTTC = quote.items.reduce((sum, item) => {
            const qty = parseFloat(item.quantity) || 0;
            const unitTTC = parseFloat(item.unitPrice) || 0;
            return sum + qty * unitTTC;
        }, 0);

        const totalHT = totalTTC / 1.2;
        const remise = (quote.discount / 100) * totalHT;
        const htAfterRemise = totalHT - remise;
        const tva = htAfterRemise * 0.2;
        const totalTTCApresRemise = htAfterRemise + tva;
        const acompte = parseFloat(quote.deposit || 0);
        const totalFinal = totalTTCApresRemise - acompte;

        const html = `
		  <!DOCTYPE html>
		  <html lang="fr">
		  <head>
			<meta charset="UTF-8" />
			<style>
			  body {
				font-family: Arial, sans-serif;
				font-size: 10px;
				padding: 15px;
				max-width: 595px;
				margin: auto;
			  }
			  h2 {
				text-align: center;
				margin-bottom: 10px;
			  }
			  .header-logo {
				text-align: center;
				margin-bottom: 10px;
			  }
			  .header-logo img {
				height: 40px;
			  }
			  .section {
				margin-bottom: 12px;
			  }
			  table {
				width: 100%;
				border-collapse: collapse;
				font-size: 9px;
				margin-top: 8px;
			  }
			  th, td {
				border: 1px solid #ccc;
				padding: 4px;
				text-align: left;
			  }
			  th {
				background-color: #f2f2f2;
			  }
			  .totaux {
				margin-top: 10px;
				font-size: 9px;
			  }
			  .totaux td {
				padding: 3px 4px;
			  }
			  .mentions {
				font-size: 8px;
				color: #555;
				margin-top: 15px;
				text-align: justify;
				line-height: 1.3;
			  }
			  .footer {
				margin-top: 25px;
				font-size: 8px;
				text-align: center;
			  }
			  .signature {
				margin-top: 30px;
			  }
			  .signature-line {
				margin-top: 25px;
				border-top: 1px solid #000;
				width: 200px;
			  }
			</style>
		  </head>
		  <body>
		  
			<div class="header-logo">
			  <img src="https://www.avenir-informatique.fr/logo.webp" alt="Logo" />
			</div>
		  
			<h2>Devis - Assemblage PC</h2>
		  
			<div class="section">
			  <strong>Client :</strong> ${quote.name}<br/>
			  <strong>T√©l√©phone :</strong> ${quote.phone || "N/A"}<br/>
			  <strong>Date :</strong> ${new Date(quote.created_at).toLocaleDateString(
                  "fr-FR"
              )}<br/>
			  <strong>Valide jusqu‚Äôau :</strong> ${new Date(
                  quote.valid_until
              ).toLocaleDateString("fr-FR")}<br/>
			  <strong>N¬∞ Devis :</strong> ${quote.quote_number}
			</div>
		  
			<table>
			  <thead>
				<tr>
				  <th>D√©signation</th>
				  <th>Qt√©</th>
				  <th>PU HT</th>
				  <th>TVA</th>
				  <th>Total TTC</th>
				</tr>
			  </thead>
			  <tbody>
				${rowsHtml}
			  </tbody>
			</table>
		  
			<table class="totaux">
			  <tr><td><strong>Total TTC saisi :</strong> ${totalTTC.toFixed(2)} ‚Ç¨</td></tr>
			  <tr><td><strong>Total HT :</strong> ${totalHT.toFixed(2)} ‚Ç¨</td></tr>
			  <tr><td><strong>Remise (${quote.discount}%):</strong> -${remise.toFixed(
            2
        )} ‚Ç¨</td></tr>
			  <tr><td><strong>TVA (20%) :</strong> ${tva.toFixed(2)} ‚Ç¨</td></tr>
			  <tr><td><strong>Total TTC apr√®s remise :</strong> ${totalTTCApresRemise.toFixed(
                  2
              )} ‚Ç¨</td></tr>
			  <tr><td><strong>Acompte :</strong> -${acompte.toFixed(2)} ‚Ç¨</td></tr>
			  <tr><td><strong>Total √† payer :</strong> ${totalFinal.toFixed(2)} ‚Ç¨</td></tr>
			</table>
		  
			<div class="mentions">
			  <p><strong>Conditions :</strong> Ce devis est valable 30 jours √† compter de sa date d‚Äô√©mission. Toute commande de mat√©riel est consid√©r√©e comme ferme et non remboursable une fois valid√©e. Les composants list√©s sont soumis √† disponibilit√© chez les fournisseurs. L‚Äôassemblage est effectu√© selon les standards professionnels. Le client reconna√Æt avoir √©t√© inform√© que les pi√®ces b√©n√©ficient des garanties constructeur, et qu‚Äôun acompte peut √™tre requis avant toute commande.</p>
			  <p><strong>Acceptation :</strong> La signature du pr√©sent devis vaut bon pour accord sur les prestations list√©es ainsi que leurs conditions de r√©alisation.</p>
			</div>
		  
			<div class="signature">
			  <p><strong>Signature du client :</strong></p>
			  <div class="signature-line"></div>
			</div>
		  
        <div style="margin-top: 20px; background: #f0f0f0; padding: 8px; font-size: 8px; text-align: center; color: #555;">
          <p><strong>AVENIR INFORMATIQUE</strong> - 16, place de l'H√¥tel de Ville, 93700 Drancy</p>
          <p>T√©l : 01 41 60 18 18 - SIRET : 422 240 457 00016</p>
          <p>R.C.S : Bobigny B422 240 457 - N/Id CEE FR32422240457</p>
			</div>
		  
		  </body>
		  </html>
		  `;

        await Print.printAsync({ html });
        await supabase
            .from("quotes")
            .update({ deja_imprime: true })
            .eq("id", quote.id);
    };

    if (!quote)
        return <Text style={{ padding: 20 }}>Chargement du devis...</Text>;
    const handleDownloadPdf = async () => {
        try {
            console.log("üì• Bouton T√©l√©charger cliqu√©");

            const dateCreated = new Date(quote.created_at).toLocaleDateString(
                "fr-FR",
                {
                    day: "numeric",
                    month: "long",
                    year: "numeric",
                }
            );

            const dateValid = new Date(quote.valid_until).toLocaleDateString(
                "fr-FR",
                {
                    day: "numeric",
                    month: "long",
                    year: "numeric",
                }
            );

            const rowsHtml = quote.items
                .map((item) => {
                    const qty = parseFloat(item.quantity) || 0;
                    const puTTC = parseFloat(item.unitPrice) || 0;
                    const puHT = puTTC / 1.2;
                    const totalTTC = qty * puTTC;
                    const tva = totalTTC - puHT * qty;

                    const designation = item.label
                        ? `${item.label} ‚Äî ${item.description}`
                        : item.description || "";

                    return `
			  <tr>
				<td style="border: 1px solid #ccc; padding: 3px;">${designation}</td>
				<td style="border: 1px solid #ccc; padding: 3px; text-align: center;">${qty}</td>
				<td style="border: 1px solid #ccc; padding: 3px; text-align: right;">${puHT.toFixed(
                    2
                )} ‚Ç¨</td>
				<td style="border: 1px solid #ccc; padding: 3px; text-align: right;">${tva.toFixed(
                    2
                )} ‚Ç¨</td>
				<td style="border: 1px solid #ccc; padding: 3px; text-align: right;">${totalTTC.toFixed(
                    2
                )} ‚Ç¨</td>
			  </tr>
			`;
                })
                .join("");

            const totalTTC = quote.items.reduce((sum, item) => {
                const qty = parseFloat(item.quantity) || 0;
                const unitTTC = parseFloat(item.unitPrice) || 0;
                return sum + qty * unitTTC;
            }, 0);

            const totalHT = totalTTC / 1.2;
            const remise = (quote.discount / 100) * totalHT;
            const htAfterRemise = totalHT - remise;
            const tva = htAfterRemise * 0.2;
            const totalTTCApresRemise = htAfterRemise + tva;
            const acompte = parseFloat(quote.deposit || 0);
            const totalFinal = totalTTCApresRemise - acompte;

            const html = `
		  <!DOCTYPE html>
		  <html lang="fr">
		  <head>
			<meta charset="UTF-8" />
			<style>
			  body {
				font-family: Arial, sans-serif;
				font-size: 10px;
				padding: 15px;
				max-width: 595px;
				margin: auto;
			  }
			  h2 {
				text-align: center;
				margin-bottom: 10px;
			  }
			  .header-logo {
				text-align: center;
				margin-bottom: 10px;
			  }
			  .header-logo img {
				height: 40px;
			  }
			  .section {
				margin-bottom: 12px;
			  }
			  table {
				width: 100%;
				border-collapse: collapse;
				font-size: 9px;
				margin-top: 8px;
			  }
			  th, td {
				border: 1px solid #ccc;
				padding: 4px;
				text-align: left;
			  }
			  th {
				background-color: #f2f2f2;
			  }
			  .totaux {
				margin-top: 10px;
				font-size: 9px;
			  }
			  .totaux td {
				padding: 3px 4px;
			  }
			  .mentions {
				font-size: 8px;
				color: #555;
				margin-top: 15px;
				text-align: justify;
				line-height: 1.3;
			  }
			  .footer {
				margin-top: 25px;
				font-size: 8px;
				text-align: center;
			  }
			  .signature {
				margin-top: 30px;
			  }
			  .signature-line {
				margin-top: 25px;
				border-top: 1px solid #000;
				width: 200px;
			  }
			</style>
		  </head>
		  <body>
		  
			<div class="header-logo">
			  <img src="https://www.avenir-informatique.fr/logo.webp" alt="Logo" />
			</div>
		  
			<h2>Devis - Assemblage PC</h2>
		  
			<div class="section">
			  <strong>Client :</strong> ${quote.name}<br/>
			  <strong>T√©l√©phone :</strong> ${quote.phone || "N/A"}<br/>
			  <strong>Date :</strong> ${new Date(quote.created_at).toLocaleDateString(
                  "fr-FR"
              )}<br/>
			  <strong>Valide jusqu‚Äôau :</strong> ${new Date(
                  quote.valid_until
              ).toLocaleDateString("fr-FR")}<br/>
			  <strong>N¬∞ Devis :</strong> ${quote.quote_number}
			</div>
		  
			<table>
			  <thead>
				<tr>
				  <th>D√©signation</th>
				  <th>Qt√©</th>
				  <th>PU HT</th>
				  <th>TVA</th>
				  <th>Total TTC</th>
				</tr>
			  </thead>
			  <tbody>
				${rowsHtml}
			  </tbody>
			</table>
		  
			<table class="totaux">
			  <tr><td><strong>Total TTC saisi :</strong> ${totalTTC.toFixed(2)} ‚Ç¨</td></tr>
			  <tr><td><strong>Total HT :</strong> ${totalHT.toFixed(2)} ‚Ç¨</td></tr>
			  <tr><td><strong>Remise (${quote.discount}%):</strong> -${remise.toFixed(
                2
            )} ‚Ç¨</td></tr>
			  <tr><td><strong>TVA (20%) :</strong> ${tva.toFixed(2)} ‚Ç¨</td></tr>
			  <tr><td><strong>Total TTC apr√®s remise :</strong> ${totalTTCApresRemise.toFixed(
                  2
              )} ‚Ç¨</td></tr>
			  <tr><td><strong>Acompte :</strong> -${acompte.toFixed(2)} ‚Ç¨</td></tr>
			  <tr><td><strong>Total √† payer :</strong> ${totalFinal.toFixed(2)} ‚Ç¨</td></tr>
			</table>
		  
			<div class="mentions">
			  <p><strong>Conditions :</strong> Ce devis est valable 30 jours √† compter de sa date d‚Äô√©mission. Toute commande de mat√©riel est consid√©r√©e comme ferme et non remboursable une fois valid√©e. Les composants list√©s sont soumis √† disponibilit√© chez les fournisseurs. L‚Äôassemblage est effectu√© selon les standards professionnels. Le client reconna√Æt avoir √©t√© inform√© que les pi√®ces b√©n√©ficient des garanties constructeur, et qu‚Äôun acompte peut √™tre requis avant toute commande.</p>
			  <p><strong>Acceptation :</strong> La signature du pr√©sent devis vaut bon pour accord sur les prestations list√©es ainsi que leurs conditions de r√©alisation.</p>
			</div>
		  
			<div class="signature">
			  <p><strong>Signature du client :</strong></p>
			  <div class="signature-line"></div>
			</div>
		  
        <div style="margin-top: 20px; background: #f0f0f0; padding: 8px; font-size: 8px; text-align: center; color: #555;">
          <p><strong>AVENIR INFORMATIQUE</strong> - 16, place de l'H√¥tel de Ville, 93700 Drancy</p>
          <p>T√©l : 01 41 60 18 18 - SIRET : 422 240 457 00016</p>
          <p>R.C.S : Bobigny B422 240 457 - N/Id CEE FR32422240457</p>
			</div>
		  
		  </body>
		  </html>
		  `;

            const { uri } = await Print.printToFileAsync({ html });
            console.log("‚úÖ PDF g√©n√©r√© :", uri);

            if (await Sharing.isAvailableAsync()) {
                await Sharing.shareAsync(uri, {
                    mimeType: "application/pdf",
                    dialogTitle: "Partager ou enregistrer le devis",
                });

                // ‚¨áÔ∏è Mets √† jour le statut
                await supabase
                    .from("quotes")
                    .update({ deja_envoye: true })
                    .eq("id", quote.id);

                Alert.alert(
                    "‚úÖ Partage termin√©",
                    "Le devis a bien √©t√© partag√©."
                );
            } else {
                Alert.alert("‚úÖ PDF pr√™t", "Fichier g√©n√©r√© ici : " + uri);
            }
        } catch (error) {
            console.error("‚ùå Erreur g√©n√©ration PDF :", error);
            Alert.alert("Erreur", "Impossible de g√©n√©rer ou partager le PDF.");
        }
    };

    return (
        <ScrollView style={{ padding: 20 }}>
            <Text
                style={{ fontSize: 20, fontWeight: "bold", marginBottom: 10 }}
            >
                Aper√ßu du devis
            </Text>
            <Text>Client : {quote.name}</Text>
            <Text>T√©l√©phone : {quote.phone}</Text>
            <Text>
                Date :{" "}
                {new Date(quote.created_at).toLocaleDateString("fr-FR", {
                    day: "numeric",
                    month: "long",
                    year: "numeric",
                })}
            </Text>

            <Text>
                Valide jusqu'au :{" "}
                {new Date(Date.parse(quote.valid_until)).toLocaleDateString(
                    "fr-FR",
                    {
                        day: "numeric",
                        month: "long",
                        year: "numeric",
                    }
                )}
            </Text>

            <Text style={{ marginTop: 10 }}>
                Nombre de lignes : {quote.items.length}
            </Text>

			<View style={{ flexDirection: "row", marginTop: 30, gap: 10 }}>
  <TouchableOpacity
    style={{
      flex: 1,
      backgroundColor: "#007bff",
      padding: 12,
      borderRadius: 8,
      alignItems: "center",
      justifyContent: "center",
    }}
    onPress={handlePrint}
  >
    <Text style={{ color: "#fff", fontWeight: "bold", fontSize: 12, textAlign: "center" }}>
      üñ®Ô∏è Imprimer
    </Text>
  </TouchableOpacity>

  <TouchableOpacity
    style={{
      flex: 1,
      backgroundColor: "#28a745",
      padding: 12,
      borderRadius: 8,
      alignItems: "center",
      justifyContent: "center",
    }}
    onPress={handleDownloadPdf}
  >
    <Text style={{ color: "#fff", fontWeight: "bold", fontSize: 12, textAlign: "center" }}>
      üì• Envoyer PDF
    </Text>
  </TouchableOpacity>

  <TouchableOpacity
  style={{
    flex: 1,
    backgroundColor: "#ffc107",
    padding: 12,
    borderRadius: 8,
    alignItems: "center",
    justifyContent: "center",
  }}
  onPress={() =>
    navigation.navigate("BillingPage", {
      fromQuote: true,
	  quoteNumber: quote.quote_number,
      name: quote.name,
      phone: quote.phone,
      items: quote.items,
      totalttc: quote.total,
      remarks: quote.remarks,
    })
  }
>
  <Text style={{ color: "#000", fontWeight: "bold", fontSize: 12 }}>
    üí≥ Facturer ce devis
  </Text>
</TouchableOpacity>

</View>

        </ScrollView>
    );
};

export default QuotePrintPage;
